name: HyperChat

# on: [push, pull_request]
on:
  workflow_dispatch: {}
  push:
    branches:
      - main
      - test

    tags:
      - "*"

jobs:
  release:
    name: build and release electron app
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out git repository
        uses: actions/checkout@v3.0.0

      - name: Install Node.js
        uses: actions/setup-node@v3.0.0
        with:
          node-version: "20"

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install -g
        run: npm install -g cross-env zx

      - name: Install Dependencies
        run: npm install

      - name: Install Web Dependencies
        run: cd web && pnpm install

      - name: Install Electron Dependencies
        run: cd electron && npm install

      - name: Build Electron App (macOS only)
        if: matrix.os == 'macos-latest'
        run: npm run prod
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          USE_HARD_LINKS: false
          MYRUNENV: github

      - name: Build Electron App (widnows)
        if: matrix.os == 'windows-latest'
        run: npm run prod
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          MYRUNENV: github

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}
          path: dist

      # - name: Publish Release
      #   uses: softprops/action-gh-release@v2
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       dist/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
