# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Release-Node.js Package

on:
  workflow_dispatch: {}
  push:
    # tags:
    #   - "v*"
    branches:
      - stable
permissions:
  contents: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out git repository
        uses: actions/checkout@v3.0.0

      - name: Install Node.js
        uses: actions/setup-node@v4.0.0
        with:
          node-version: "20"
          registry-url: https://registry.npmjs.org/


      - name: Install -g
        run: npm install -g cross-env zx

          # 根目录的依赖缓存
      - name: Cache root dependencies
        uses: actions/cache@v3
        id: cache-root
        with:
          path: node_modules
          key: ${{ matrix.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-node-

      # 安装根目录依赖（如果缓存未命中）
      - name: Install root dependencies
        if: steps.cache-root.outputs.cache-hit != 'true'
        run: npm install

      # web 目录的依赖缓存
      - name: Cache web dependencies
        uses: actions/cache@v3
        id: cache-web
        with:
          path: web/node_modules
          key: ${{ matrix.os }}-node-web-${{ hashFiles('web/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-node-web-

      # 安装 web 目录依赖（如果缓存未命中）
      - name: Install web dependencies
        if: steps.cache-web.outputs.cache-hit != 'true'
        run: npm install
        working-directory: ./web

      # electron 目录的依赖缓存
      - name: Cache electron dependencies
        uses: actions/cache@v3
        id: cache-electron
        with:
          path: electron/node_modules
          key: ${{ matrix.os }}-node-electron-${{ hashFiles('electron/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-node-electron-

      # 安装 electron 目录依赖（如果缓存未命中）
      - name: Install electron dependencies
        if: steps.cache-electron.outputs.cache-hit != 'true'
        run: npm install
        working-directory: ./electron

      - run: npm run updateVersion
      - run: npm run prod_node



      - run: cd electron && npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: SET GITHUB AND  reset
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git reset --hard HEAD 
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

